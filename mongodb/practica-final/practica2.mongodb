// 1 - Creo una base de datos llamada personas
use("personas");
// 2 - Creo una colección dentro de personas llamada amigos
db.createCollection("amigos");
// 3 - Insertamos los datos de 5 personas cuyos datos son: nombre, apellido, edad, aficciones (futbol, tenis, musica, pintura, etc), telefonos(puede ser más de uno), dirección (compuesta por calle, nro, ciudad),amigos (compuesto por nombre y edad).
db.amigos.insertMany([
  {
    _id: ObjectId("632c50cf06fe4be888b1c511"),
    Nombre: "Marisa",
    Apellidos: "García",
    Edad: 18.0,
    Aficiones: ["senderismo", "tenis", "pintura"],
    telefonos: ["73128989", "43278944"],
    direccion: {
      calle: "Av. de los Castros",
      numero: "2256",
      ciudad: "Santander",
    },
    Amigos: [
      {
        Nombre: "Monica",
        Edad: 20.0,
      },
    ],
  },
  {
    _id: ObjectId("632c50cf06fe4be888b1c512"),
    Nombre: "Luís",
    Apellidos: "Martinez",
    Edad: 18.0,
    Aficiones: ["fútbol", "senderismo", "tenis"],
    telefonos: ["808080", "4323424", "423232"],
    direccion: {
      calle: "Mitre",
      numero: "289s",
      ciudad: "Rosario",
    },
    Amigos: [
      {
        Nombre: "Monica",
        Edad: 20.0,
      },
      {
        Nombre: "Andrés",
        Edad: 24.0,
      },
    ],
  },
  {
    _id: ObjectId("632c50cf06fe4be888b1c513"),
    Nombre: "Luís",
    Apellidos: "Martinez",
    Edad: 28.0,
    Aficiones: ["natación", "culturismo"],
    telefonos: ["808080", "4323424", "423232"],
    direccion: {
      calle: "Mitre",
      numero: "289s",
      ciudad: "Rosario",
    },
    Amigos: [
      {
        Nombre: "Juan",
        Edad: 40.0,
      },
      {
        Nombre: "Antonio",
        Edad: 52.0,
      },
    ],
  },
  {
    _id: ObjectId("632c520f06fe4be888b1c514"),
    Nombre: "Joaquin",
    Apellidos: "Rodriguez",
    Edad: 29.0,
    Aficiones: ["fútbol", "natación"],
    direccion: {
      calle: "Sarmiento",
      numero: "289",
      ciudad: "Rosario",
    },
    Amigos: [
      {
        Nombre: "Andrés",
        Edad: 24.0,
      },
    ],
  },
]);
// 4 - Mostrar todos los datos de la colección en forma legible
db.amigos.find().pretty();
// 5 - Se desea ver personas mayores de 25 años
db.amigos.find({ edad: { $gt: 25 } });
// 6 - Mostrar el nombre, apellido y edad de las personas que se llamen Marisa
db.amigos.find({ Nombre: "Marisa" }, { Nombre: 1, Apellidos: 1 });
// 7 -Mostrar nombre y apellidos de los mayores de 25 años
db.amigos.find({ Edad: { $gt: 25 } }, { Nombre: 1, Apellidos: 1 }); // 8 - Insertar un documento mas solamente que tenga nombre, edad y aficciones
db.amigos.insertOne({
  Nombre: "Guido",
  Edad: 22,
  Aficiones: "gaming",
});
// 9 - Mostrar los nombres de las personas que no tengan amigos
db.amigos.find({ Amigos: { $exists: false } }, { Nombre: 1 });
// 10  -Mostrar nombre y aficiones de las personas que tienen mas de 17 años
db.amigos.find({ Edad: { $gt: 17 } }, { Nombre: 1, Aficiones: 1 });
// 11 - Mostrar las personas que juegan al tenis
db.amigos.find({ Aficiones: "tenis" });
// 12 - Mostrar las personas mayores a 17 años y que juegan al tenis
db.amigos.find({ Edad: { $gt: 17 }, Aficiones: "tenis" });
// 12A-  Mostrar las personas mayores a 28 años o que juegan al tenis
db.amigos.find({ $or: [{ Edad: { $gt: 28 } }, { Aficiones: "tenis" }] });
// 13 - Agregar los siguientes campos
// Primer registro, profesión: Desarrollador y mail: Desarrollador@gmail.com
db.amigos.updateOne(
  {},
  { $set: { Profesion: "Desarrollador", Email: "Desarrollador@gmail.com" } }
);
// 14 -Modificar el apellido de Joaquin a Gomez
db.amigos.updateOne({ Nombre: "Joaquin" }, { $set: { Apellido: "Gomez" } });
// Me equivoque y puse Apellido en singular
db.amigos.updateOne({ Nombre: "Joaquin" }, { $unset: { Apellido: 1 } });

db.amigos.updateOne({ Nombre: "Joaquin" }, { $set: { Apellidos: "Gomez" } });

// 15 - Crear una variable y asignarle el siguiente json
test = {
  Nombre: "Juan",
  Apellidos: "Perez",
  Edad: 29.0,
  Aficiones: ["fútbol", "natación"],
  Amigos: [
    {
      Nombre: "Luis",
      Edad: 18.0,
    },
  ],
};

db.amigos.insertOne(test);

// 16 - Agregarle una nueva aficion: Voley a todos los que tengan más de 20 años
db.amigos.updateMany({ Edad: { $gt: 20 } }, { $push: { Aficiones: "Voley" } });

// Para tranformar un campo string a un array de strings con el contenido del campo actual
db.amigos.updateOne(
  { Nombre: "Guido" },
  { $set: { Aficiones: ["$Aficiones"] } }
);

// 17 - Sacarle la aficion futbol a todos los que tengan más de 20 años
db.amigos.find({ Edad: { $gt: 20 } });
db.amigos.updateMany({ Edad: { $gt: 20 } }, { $pull: { Aficiones: "fútbol" } });
db.amigos.find({ Edad: { $gt: 20 } });

// 18 - Al documento agregado en el punto 15, agregarle la siguiente dirección:
// calle: "Sarmiento",numero:333, ciudad:Rosario
db.amigos.updateOne(
  { Nombre: "Juan", Apellidos: "Perez" },
  {
    $set: {
      direccion: {
        calle: "Sarmiento",
        numero: "333",
        ciudad: "Rosario",
      },
    },
  }
);

// 19 - Agregarle el siguiente amigo al documento anterior:
// Carolina, 20 años
db.amigos.updateOne(
  { Nombre: "Juan", Apellidos: "Perez" },
  { $push: { Amigos: { Nombre: "Carolina", Edad: 20 } } }
);

// 20 - Modificar el documento anterior eliminando los campos que tiene agregando solamente la profesión de Desarrollador (tener en cuenta que tenemos que mantener nombre y apellido)

db.amigos.updateOne(
  { Apellidos: "Perez" },
  {
    $unset: {},
    $set: { Profesion: "Desarrollador" },
  }
);

// 21 - Eliminar el último documento creado

db.amigos.find({}).sort({ _id: -1 }).limit(1);

db.amigos.deleteOne({ Apellido: "Perez" });

// 22 - Mostrar los nombres de las personas de este documento junto a la ciudad donde viven
db.amigos.find({}, { Nombre: 1, "direccion.ciudad": 1 });

db.amigos.aggregate([
  {
    $project: {
      Nombre: 1,
      Ciudad: "$direccion.ciudad",
    },
  },
]);

// 23 - Agregarle a los documentos de las personas que son de Rosario, el campo “Habitantes:2000000”

db.amigos.update(
  { "direccion.ciudad": "Rosario" },
  {
    $set: {
      "direccion.habitantes": 2000000,
    },
  }
);

// 24 - Modificar las edades de las personas registrados en el documento aumentando la edad en 1
db.amigos.updateMany({}, { $inc: { Edad: 1 } });

// 25 - Mostrar los documentos ordenados de menor a mayor por edades
db.amigos.find({}).sort({ Edad: -1 });

// 26 - Mostrar los campos nombre y edad de los documentos ordenados de mayor a menor por edades
db.amigos.find({}, { Nombre: 1, Apellidos: 1, Edad: 1 }).sort({ Edad: -1 });

// 27 - Mostrar nombre y edad de los documentos que contengan las siguientes aficiones ['culturismo', 'senderismo']

db.amigos.find(
  { Aficiones: { $in: ["culturismo", "senderismo"] } },
  { Nombre: 1, Edad: 1 }
);

// 28 - Mostrar nombre y edad de los documentos que no contengan las siguientes aficiones ['senderismo', 'tenis']

db.amigos.find(
  { Aficiones: { $nin: ["senderismo", "tenis"] } },
  { Nombre: 1, Edad: 1 }
);

db.amigos.updateOne(
  { Nombre: "Joaquin", Apellidos: "Rodriguez" },
  {
    Aficiones: { $push: "pintura" },
  }
);

// Eliminar todos los campos de "Rodiguez" y agregar profesion: "desarrollador"
db.amigos.updateOne(
  { Apellidos: "Rodriguez" },
  {
    $unset: {
      Nombre: {},
      Apellidos: {},
      Edad: {},
      Aficiones: {},
      telefonos: {},
      direccion: {},
      Amigos: {},
    },
    $set: { Profesion: "Desarrollador" },
  }
);

// Eliminar la aficion 'senderismo' a todos los documentos

db.amigos.find({ Aficiones: "senderismo" });
db.amigos.updateMany(
  { Aficiones: "senderismo" },
  { $pull: { Aficiones: "senderismo" } }
);

db.amigos.updateMany({}, { $push: { Aficiones: "senderismo" } });
